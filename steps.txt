### Get Started
-   Created Next project with Shadcn UI (npx create-next-app@13.4.12 promaster-lms --typescript --tailwind --eslint)
-   Run Shadcn CLI (npx shadcn-ui@latest init)
-   Install Next.nav on VScode.
-   Create folder structure with route groups

### Clerk Authentication
-   Create and account with Clerk and Create new project
-   Add .env file to root of the project
-   Install clerk to the project (npm install @clerk/nextjs)
-   Wrap the main layout with ClerkProvider from '@clerk/nextjs'
-   Create the middlewate.ts to protect the dashboard
-   Create the Signin and Signup pages and add URLs in .env file
-   Add Clerk userButton to the home pages
-   Change custom url for routes and change middleware
-   Check the Signin or Signup working

### Layout the dashboard UI
-   Create dashboard layout
-   Create the sidebar within the (dashboard) file structure
-   Create the constants file to store all constants details
-   Create the Navbar component
-   Create the mobile sidebar component
-   Create NavbarRoutes in the components folder for reuse later
-   Create the route for Teacher mode
-   Create New course page (/teacher/create)
-   Add Form, Input from Shadcn
-   Install axios
-   Design the form component for create course page and add the toast alert by installing it (react-hot-toast)
-   Create the toaster provider inside the component folder and import and return the Toaster from react-hot-toast
-   import ToasterProvider (from component folder) into the main layout

### Prisma & DB Setup 
-   Install Prisma (npm i -D prisma)
-   installing the Prisma into our project (npz prisma init)
-   Create a database in Planetscale
-   Copy and Paste .env and prisma.schema
-   Create db.ts file into the lib folder
-   Install prisma client (npm i @prisma/client)
-   Create models for Course, Attachment and Category in prisma.schema
-   Generate prisma everytime you play around with prisma (npx prisma generate) - Locally
-   Push the generated schema to database (npx prisma db push) - to Planetscale

### Course Creation API
-   Create app/api/courses/route.ts
-   Create the POST route to 'Create Course'
-   Test the application is running correctly
-   Check the created tables, run prisma studio (npx prisma studio)
-   Create the individual course page by using dynamic routes

### Course Edit Page UI
-   Fetch the course data
-   Create a icon-badge component varient as same like Shadcn component with the standard way